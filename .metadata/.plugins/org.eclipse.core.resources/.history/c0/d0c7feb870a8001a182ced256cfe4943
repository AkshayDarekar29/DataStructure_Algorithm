package sorting;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Stack;

public class TopologicalSort {
	public static void main(String[] args) {
		Graph g = new Graph(6);  
        g.addEdge(5, 2);  
        g.addEdge(5, 0);  
        g.addEdge(4, 0);  
        g.addEdge(4, 1);  
        g.addEdge(2, 3);  
        g.addEdge(3, 1);  
        
        TopologicalSort obj = new TopologicalSort();
        Stack<Integer> stack = obj.topoSort(g.getGraph());
	}

	private Stack<Integer> topoSort(ArrayList<ArrayList<Integer>> adj) {
		Stack<Integer> stack = new Stack<>();
		HashSet<Integer> visited = new HashSet<>();
		for(int i=0; i < adj.size(); i++){
			if(!visited.contains(i)){
				topoSortUtil(i, stack, visited);
			}
		}
		return stack;
	}

	private void topoSortUtil(int i, Stack<Integer> stack, HashSet<Integer> visited) {
		
	}
}

class Graph{
	int V;
	ArrayList<ArrayList<Integer>> adj;
	
	Graph(int V){
		this.V = V;
		for(int i=0; i<V; i++){
			adj.add(new ArrayList<>());
		}
	}
	
	ArrayList<ArrayList<Integer>> getGraph(){
		return adj;
	}
	
	void addEdge(int u, int v){
		adj.get(u).add(v);
	}
}
