package heap.MergeKSortedArray;

import java.util.PriorityQueue;

import linkedList.ListNode;

public class MergeKSortedArray {
	
	
	/* Approach : MinHeap
	 * Time Complexity : nLog(n)
	 * Space Complexity : O(k)
	 */
	public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<Integer> q = new PriorityQueue<>();
        int len = lists.length;
        for(int i=0; i < len; i++){
            ListNode temp = lists[i];
            while(temp != null){
                q.offer(temp.val);
                temp = temp.next;
            }
        }
        ListNode res = new ListNode(0);
        ListNode temp = res;
        while(!q.isEmpty()){
            temp.next = new ListNode(q.poll());
            temp = temp.next;
        }
        return res.next;
    }
	
}
