package patternSearch;

public class RabinKarp {
	public static void main(String args[]) 
    { 
        String txt = "ABABDABACDABABCABAB"; 
        String pat = "AB"; 
        int q = 101;
        new RabinKarp().search(pat, txt, q); 
    }

	private void search(String pat, String txt, int q) {
		int m = pat.length();
		int n = txt.length();
		
		int d = 256;
		int p = 0, t = 0;
		int h = (int) (Math.pow(d, m-1)%q);
		int i,j;
		
		for(i = 0; i<m; i++){
			p = (d*p + pat.charAt(i))%q;
			t = (d*p + txt.charAt(i))%q;
		}
		
		for (i = 0; i <=n-m; i++) 
        { 
            if ( p == t ) 
            { 
                for (j = 0; j < m; j++) 
                { 
                    if (txt.charAt(i+j) != pat.charAt(j)) 
                        break; 
                } 
                if (j == m) {
                    System.out.println("Pattern found at index " + i);
                }
            } 
      
           
            if ( i < n-m ) 
            { 
                t = (d*(t - txt.charAt(i)*h) + txt.charAt(i+m))%q; 
  
                if (t < 0){
                	t = (t + q); 
                }
            }
        } 
	}
}
