package general;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

class Test {
	public static void main(String args[]) 
    { 
		Test obj = new Test();
		TreeNode root = TreeNode.getTree();
		obj.preorderTraversal(root);
    }	
	
	public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        while(curr != null || !stack.empty() ){
            while(curr != null){
            	list.add(curr.val);
                if(curr.right != null){
                    stack.push(curr.right);
                }
                curr = curr.left;
            }
            if(!stack.empty()){
            	curr = stack.pop();
            }
        }
         return list;
    }
	
}

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
    
    static TreeNode getTree(){
  	  TreeNode root = new TreeNode(5);
  	  TreeNode rootLeft = new TreeNode(10);
  	  TreeNode rootright= new TreeNode(20);
  	  root.left = rootLeft;
  	  root.right = rootright;
  	  TreeNode rootLeft_l = new TreeNode(4);
  	  TreeNode rootLeft_R = new TreeNode(3);
  	  rootLeft.left = rootLeft_l;
  	  rootLeft.right = rootLeft_R;
  	  TreeNode rootright_r= new TreeNode(25);
  	  rootright.right = rootright_r;
  	  return root;

  	  
    }
}
